.parent {
  display: flex;
  height: ; /* Or whatever */
}

.child {
  width: ; /* Or whatever */
  height: ; /* Or whatever */
  margin: auto; /* Magic! */
}
/*
  Margin set to `auto` in a flex container absorb extra space. 
  So setting a vertical margin of auto will make 
  the item perfectly centered in both.
  */

.flex-container {
  /* We first create a flex layout context */
  display: flex;

  /* Then we define the flow direction 
       and if we allow the items to wrap 
     * Remember this is the same as:
     * flex-direction: row;
     * flex-wrap: wrap;
     */
  flex-flow: row wrap;

  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
  padding: 0;
  margin: 0;
  list-style: none;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  -webkit-flex-flow: row wrap;
}

.flex-item {
  background: tomato;
  padding: 5px;
  width: 200px;
  height: 150px;
  margin-top: 10px;
  line-height: 150px;
  color: white;
  font-weight: bold;
  font-size: 3rem;
  text-align: center;
}

#box1 {
  background-color: #568983;
}

#box2 {
  background-color: #1298;
}

#box3 {
  background-color: #456984;
}

#box4 {
  background-color: #294;
}

#box5 {
  background-color: #593;
}

#box6 {
  background-color: #309193;
}
